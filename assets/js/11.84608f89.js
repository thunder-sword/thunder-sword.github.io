(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{479:function(t,a,s){"use strict";s.r(a);var e=s(15),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"x1-概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#x1-概述"}},[t._v("#")]),t._v(" x1.概述")]),t._v(" "),s("h2",{attrs:{id:"_1-组合逻辑电路的特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-组合逻辑电路的特点"}},[t._v("#")]),t._v(" 1.组合逻辑电路的特点")]),t._v(" "),s("p",[t._v("任何时刻的输出，仅仅取决于该时刻的\n输入，与电路原来状态无关")]),t._v(" "),s("p",[t._v("电路结构：由逻辑门电路组成。\n电路特点：没有记忆单元\n无状态反馈")]),t._v(" "),s("h2",{attrs:{id:"_2-逻辑功能的描述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-逻辑功能的描述"}},[t._v("#")]),t._v(" 2.逻辑功能的描述")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ithundersword/BlogImages/raw/master/images/blog/PicGo/20210613194949.png",alt:"image-20210521143500039"}})]),t._v(" "),s("h1",{attrs:{id:"x2-组合逻辑电路的分析方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#x2-组合逻辑电路的分析方法"}},[t._v("#")]),t._v(" x2.组合逻辑电路的分析方法")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ithundersword/BlogImages/raw/master/images/blog/PicGo/20210613194950.png",alt:"image-20210521143743324"}})]),t._v(" "),s("p",[t._v("方法：")]),t._v(" "),s("p",[t._v("从输出端开始，依次向前，确定大体，逐步摸细，最后化简。")]),t._v(" "),s("p",[t._v("注意：")]),t._v(" "),s("p",[t._v("==答题时需要答全面==：")]),t._v(" "),s("p",[t._v("1）分析并写出逻辑函数式")]),t._v(" "),s("p",[t._v("2）列出真值表")]),t._v(" "),s("p",[t._v("3）==分析逻辑功能==")]),t._v(" "),s("p",[t._v("例子：")]),t._v(" "),s("p",[t._v("1.试分析下图电路的逻辑功能，指出该电路的用途：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ithundersword/BlogImages/raw/master/images/blog/PicGo/20210613194951.png",alt:"image-20210521143812462"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ithundersword/BlogImages/raw/master/images/blog/PicGo/20210613194952.png",alt:"image-20210521143827688"}})]),t._v(" "),s("p",[t._v("2：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ithundersword/BlogImages/raw/master/images/blog/PicGo/20210613194953.png",alt:"image-20210521144035355"}})]),t._v(" "),s("h1",{attrs:{id:"x3-组合逻辑及电路的设计方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#x3-组合逻辑及电路的设计方法"}},[t._v("#")]),t._v(" ==x3.组合逻辑及电路的设计方法==")]),t._v(" "),s("p",[t._v("设计任务：根据给出的实际逻辑问题，求出实现这一逻辑功能的最简单的逻辑电路")]),t._v(" "),s("p",[t._v("最简概念：\n• 1. 电路所用的器件数最少\n• 2. 器件的种类最少\n• 3. 器件之间的连线最少")]),t._v(" "),s("p",[t._v("设计步骤：")]),t._v(" "),s("p",[t._v("1.逻辑抽象\n2.逻辑函数式\n3.选定器件类型（小规模集成电路）\n4.化简\n5.画出逻辑电路图")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ithundersword/BlogImages/raw/master/images/blog/PicGo/20210613194954.png",alt:"image-20210523080557431"}})]),t._v(" "),s("h2",{attrs:{id:"_1-例子1："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-例子1："}},[t._v("#")]),t._v(" 1.例子1：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ithundersword/BlogImages/raw/master/images/blog/PicGo/20210613194955.png",alt:"image-20210523083337376"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ithundersword/BlogImages/raw/master/images/blog/PicGo/20210613194956.png",alt:"image-20210523083352753"}})]),t._v(" "),s("p",[t._v("==注意：第4步化简需要写出过程，如果是用卡诺图则画出卡诺图并圈上圈。==")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ithundersword/BlogImages/raw/master/images/blog/PicGo/20210613194957.png",alt:"image-20210523083504579"}})]),t._v(" "),s("p",[t._v("其他函数式和逻辑电路：")]),t._v(" "),s("p",[t._v("用==与非门==实现该电路：")]),t._v(" "),s("p",[t._v("就是将原来的逻辑公式加了两层非后分解。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ithundersword/BlogImages/raw/master/images/blog/PicGo/20210613194958.png",alt:"image-20210523083659852"}})]),t._v(" "),s("p",[t._v("用==与或非门==实现该电路：")]),t._v(" "),s("p",[t._v("取0然后一起非。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ithundersword/BlogImages/raw/master/images/blog/PicGo/20210613194959.png",alt:"image-20210523083710769"}})]),t._v(" "),s("h1",{attrs:{id:"x4-编码器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#x4-编码器"}},[t._v("#")]),t._v(" "),s("strong",[t._v("x4.编码器")])]),t._v(" "),s("p",[t._v("编码：用文字、图像或数码表示特定对象的过程称为编码将每个事物用一个二值代码（高、低电平）表示")]),t._v(" "),s("p",[t._v("编码器的逻辑功能：==把输入的每一个高、低电平信号编制成一个对应的二进制代码==")]),t._v(" "),s("p",[t._v("编码器分为两种：")]),t._v(" "),s("ul",[s("li",[t._v("普通编码器")]),t._v(" "),s("li",[t._v("优先编码器")])]),t._v(" "),s("h2",{attrs:{id:"_1-普通编码器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-普通编码器"}},[t._v("#")]),t._v(" 1.普通编码器")]),t._v(" "),s("p",[t._v("==任何时刻只允许输入一个编码信号，否则输出将发生混乱==")]),t._v(" "),s("p",[t._v("如下一个8线-3线编码器：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ithundersword/BlogImages/raw/master/images/blog/PicGo/20210613195000.png",alt:"image-20210523102007753"}}),s("img",{attrs:{src:"https://gitee.com/ithundersword/BlogImages/raw/master/images/blog/PicGo/20210613195001.png",alt:"image-20210523102543764"}})]),t._v(" "),s("h2",{attrs:{id:"_2-优先编码器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-优先编码器"}},[t._v("#")]),t._v(" 2.优先编码器")]),t._v(" "),s("p",[t._v("==允许同时输入两个以上信号，并按优先级输出。==")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ithundersword/BlogImages/raw/master/images/blog/PicGo/20210613195002.png",alt:"image-20210523103620832"}})]),t._v(" "),s("p",[t._v("由上有如下逻辑公式：\n$$\n\\begin{cases}\n\\overline{Y}_2=\\overline{(I_4+I_5+I_6+I_7)·S}\\\n\\overline{Y}_1=\\overline{(I_2\\overline{I}_4\\overline{I}_5+I_3\\overline{I}_4\\overline{I}_5+I_6+I_7)·S}\\\n\\overline{Y}_0=\\overline{(I_1\\overline{I}_2\\overline{I}_4\\overline{I}_6+I_3\\overline{I}_4\\overline{I}_6+I_5\\overline{I}_6+I_7)·S}\n\\end{cases}\n$$\n"),s("img",{attrs:{src:"https://gitee.com/ithundersword/BlogImages/raw/master/images/blog/PicGo/20210613195003.png",alt:"image-20210523110454537"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ithundersword/BlogImages/raw/master/images/blog/PicGo/20210613195004.png",alt:"image-20210523112339244"}})]),t._v(" "),s("p",[t._v("例子：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ithundersword/BlogImages/raw/master/images/blog/PicGo/20210613195005.png",alt:"image-20210523112403463"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ithundersword/BlogImages/raw/master/images/blog/PicGo/20210613195006.png",alt:"image-20210523113355485"}})]),t._v(" "),s("h1",{attrs:{id:"x5-译码器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#x5-译码器"}},[t._v("#")]),t._v(" "),s("strong",[t._v("x5.译码器")])]),t._v(" "),s("p",[t._v("译码是编码的反操作")]),t._v(" "),s("p",[t._v("译码器的功能:将每个输入的二进制代码译成对应的输出高低电平信号。")]),t._v(" "),s("p",[t._v("常用的译码器：二进制译码器，二—十进制译码器,和显示译码器三类。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ithundersword/BlogImages/raw/master/images/blog/PicGo/20210613195007.png",alt:"image-20210523113941663"}})]),t._v(" "),s("p",[t._v("例子：")]),t._v(" "),s("h2",{attrs:{id:"_1-二极管与门阵列组成的译码器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-二极管与门阵列组成的译码器"}},[t._v("#")]),t._v(" 1.二极管与门阵列组成的译码器")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ithundersword/BlogImages/raw/master/images/blog/PicGo/20210613195008.png",alt:"image-20210523113959714"}})]),t._v(" "),s("p",[t._v("优点：简单\n缺点：")]),t._v(" "),s("ul",[s("li",[t._v("电路的输入电阻较低，而输出电阻较高")]),t._v(" "),s("li",[t._v("输出的高、低电平信号发生偏移（偏离输入信号的高、\n低电平）")])]),t._v(" "),s("p",[t._v("因此，中规模集成电路译码器多采用三极管集成门电路")]),t._v(" "),s("h2",{attrs:{id:"_2-ttl与非门组成的3线-8线译码器74ls138（最小项译码器）："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-ttl与非门组成的3线-8线译码器74ls138（最小项译码器）："}},[t._v("#")]),t._v(" 2.TTL与非门组成的3线-8线译码器74LS138（最小项译码器）：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ithundersword/BlogImages/raw/master/images/blog/PicGo/20210613195009.png",alt:"image-20210523115430450"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ithundersword/BlogImages/raw/master/images/blog/PicGo/20210613195010.png",alt:"image-20210523115705212"}})]),t._v(" "),s("p",[t._v("例子：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ithundersword/BlogImages/raw/master/images/blog/PicGo/20210613195011.png",alt:"image-20210523115953381"}})]),t._v(" "),s("h3",{attrs:{id:"_2-2-二-十进制译码器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-二-十进制译码器"}},[t._v("#")]),t._v(" 2-2.二-十进制译码器")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ithundersword/BlogImages/raw/master/images/blog/PicGo/20210613195012.png",alt:"image-20210524101647417"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ithundersword/BlogImages/raw/master/images/blog/PicGo/20210613195013.png",alt:"image-20210524101701493"}})]),t._v(" "),s("h2",{attrs:{id:"_3-显示译码器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-显示译码器"}},[t._v("#")]),t._v(" 3.显示译码器")]),t._v(" "),s("h3",{attrs:{id:"_3-1-七段字符显示器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-七段字符显示器"}},[t._v("#")]),t._v(" 3-1.七段字符显示器")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ithundersword/BlogImages/raw/master/images/blog/PicGo/20210613195014.png",alt:"image-20210524102041497"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ithundersword/BlogImages/raw/master/images/blog/PicGo/20210613195015.png",alt:"image-20210524102554226"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ithundersword/BlogImages/raw/master/images/blog/PicGo/20210613195016.png",alt:"image-20210524105302364"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ithundersword/BlogImages/raw/master/images/blog/PicGo/20210613195017.png",alt:"image-20210524113215800"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ithundersword/BlogImages/raw/master/images/blog/PicGo/20210613195018.png",alt:"image-20210524113226947"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ithundersword/BlogImages/raw/master/images/blog/PicGo/20210613195019.png",alt:"image-20210524113242313"}})]),t._v(" "),s("h2",{attrs:{id:"_4-用译码器设计组合逻辑电路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-用译码器设计组合逻辑电路"}},[t._v("#")]),t._v(" ==4.用译码器设计组合逻辑电路==")]),t._v(" "),s("p",[t._v("注意最小项要化成非的形式，因为译码器输出是输出的非值。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ithundersword/BlogImages/raw/master/images/blog/PicGo/20210613195020.png",alt:"image-20210524115301465"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ithundersword/BlogImages/raw/master/images/blog/PicGo/20210613195021.png",alt:"image-20210524115313531"}})]),t._v(" "),s("h1",{attrs:{id:"x6-数据选择器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#x6-数据选择器"}},[t._v("#")]),t._v(" "),s("strong",[t._v("x6.数据选择器")])]),t._v(" "),s("p",[t._v("1.数据选择器的定义与功能：")]),t._v(" "),s("p",[t._v("数据选择是指经过选择,把多路数据中的某一路数据传送到公共数据线上,实现数据选择功能的逻辑电路称为==数据选择器==。")]),t._v(" "),s("p",[t._v("它的作用相当于多个输入的单刀多掷开关,其示意图如图4.4.21所示：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ithundersword/BlogImages/raw/master/images/blog/PicGo/20210613195022.png",alt:"image-20210526140525477"}})]),t._v(" "),s("p",[t._v("真值表：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ithundersword/BlogImages/raw/master/images/blog/PicGo/20210613195023.png",alt:"image-20210526140612931"}})]),t._v(" "),s("h1",{attrs:{id:"x7-数据比较器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#x7-数据比较器"}},[t._v("#")]),t._v(" "),s("strong",[t._v("x7.数据比较器")])]),t._v(" "),s("p",[t._v("在数字系统中,特别是在计算机中常需要对两个数的大小进行比较。数值比较器就是对两个二进制数A、B进行比较的逻辑电路,比较结果有A>B、A<B以及A=B三种情况。")]),t._v(" "),s("h2",{attrs:{id:"_1-一位数值比较器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-一位数值比较器"}},[t._v("#")]),t._v(" 1.一位数值比较器")]),t._v(" "),s("p",[t._v("1位数值比较器是多位比较器的基础。当A和B都是1位二进制数时,它们只能取0或1\n两种值,由此可写出I位数值比较器的真值表，如表4.4.16所示。\n由真值表得到如下逻辑表达式:")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ithundersword/BlogImages/raw/master/images/blog/PicGo/20210613195024.png",alt:"image-20210526151958277"}})]),t._v(" "),s("h2",{attrs:{id:"_2-数值比较器的位数扩展"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-数值比较器的位数扩展"}},[t._v("#")]),t._v(" 2.数值比较器的位数扩展")]),t._v(" "),s("p",[t._v("数值比较器的扩展有串联和并联两种方式。图4.4.33表示两个4位数值比较器串联而成为一个8位的数值比较器。我们知道,对于两个8位数,若高4位相同,它们的大小则由低4位的比较结果确定。因此.低4位的比较结果应作为高4位的条件,即低4位比较器的输出端应分别与高4位比较器的Isn.Isen和1端连接。\n当位数较多且要满足一定的速度要求时,可以采取并联方式。图4.4.34表示16位并联数值比较器的原理图。由图可以看出这里采用两级比较方法,将16位按高低位次序分成四组,每组4位，各组的比较是并行进行的。将每组的比较结果再经4位比较器进行比较后得出结果。\n显然,从数据输人到稳定输出只需2倍的4位比较器延迟时间，若用串联方式,则16位的数值比较器从输入到稳定输出需要约四倍的4位比较器的延迟时间。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ithundersword/BlogImages/raw/master/images/blog/PicGo/20210613195025.png",alt:"image-20210526153816204"}})]),t._v(" "),s("h1",{attrs:{id:"x8-算术运算电路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#x8-算术运算电路"}},[t._v("#")]),t._v(" x8.算术运算电路")]),t._v(" "),s("h2",{attrs:{id:"_1-半加器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-半加器"}},[t._v("#")]),t._v(" "),s("strong",[t._v("1.半加器")])]),t._v(" "),s("p",[t._v("半加器和全加器是算术运算电路中的基本单元,它们是完成1位二进制数相加的一种组合逻辑电路。\n"),s("strong",[t._v("如果只考虑了两个加数本身，而没有考虑低位进位的加法运算")]),t._v(",称为==半加==。实现半加运算的逻辑电路称为半加器。两个1位二进制的半加运算可用表4.4.18所示的真值表表示,其中A、B是两个加数,S表示和数,C表示进位数。由真值表可得逻辑表达式：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ithundersword/BlogImages/raw/master/images/blog/PicGo/20210613195026.png",alt:"image-20210526143237328"}})]),t._v(" "),s("h2",{attrs:{id:"_2-全加器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-全加器"}},[t._v("#")]),t._v(" "),s("strong",[t._v("2.全加器")])]),t._v(" "),s("p",[t._v("全加器能进行"),s("strong",[t._v("被加数、加数和来自低位的进位信号相加，并根据求和结果给出该位的进位信号")]),t._v("。\n根据全加器的功能,可列出它的真值表，如表4.4.19所示。其中A和B分别是被加数及加数,C为低位进位数,S为本位和数(称为全加和)以及C.为向高位的进位数。为了求出S和C的逻辑表达式,首先分别画出S和C.的卡诺图，如图4.4.36所示,其中C,的包围圈是为了便于利用A⊕B结果,得出下列表达式:")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ithundersword/BlogImages/raw/master/images/blog/PicGo/20210613195027.png",alt:"image-20210526143458015"}})]),t._v(" "),s("h2",{attrs:{id:"_3-多位加法器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-多位加法器"}},[t._v("#")]),t._v(" 3.多位加法器")]),t._v(" "),s("h3",{attrs:{id:"_3-1-串行进位加法器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-串行进位加法器"}},[t._v("#")]),t._v(" 3-1.串行进位加法器")]),t._v(" "),s("p",[t._v("若有多位数相加，则可采用并行相加串行进位的方式来完成。例如,有两个4位二进制数\nA~3~A~2~A~1~A~0~,和B~3~B~2~B~1~B~0~。相加,可以采用4个全加器构成4位数加法器,其原理图如图4.4.38所示。\n将低位的进位输出信号接到高位的进位输人端,因此,任1位的加法运算必须在低1位的运算完成之后才能进行,这种进位方式称为串行进位。这种加法器的逻辑电路比较简单,但它的运算速度不高。为克服这一缺点,可以采用超前进位等方式。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ithundersword/BlogImages/raw/master/images/blog/PicGo/20210613195028.png",alt:"image-20210526150727303"}})]),t._v(" "),s("h3",{attrs:{id:"_3-2-超前进位加法器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-超前进位加法器"}},[t._v("#")]),t._v(" 3-2.超前进位加法器")]),t._v(" "),s("p",[t._v("由于串行进位加法器的速度受到进位信号的限制,人们又设计了一种多位数超前进位加法\n逻辑电路,使每位的进位只由被加数和加数决定，而与低位的进位无关。下面介绍超前进位的\n概念。\n由式(4.4.10),并考虑多位数值相加时,全加器的和数s,和进位C,的逻辑表达式")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/ithundersword/BlogImages/raw/master/images/blog/PicGo/20210613195029.png",alt:"image-20210526150834311"}}),s("img",{attrs:{src:"https://gitee.com/ithundersword/BlogImages/raw/master/images/blog/PicGo/20210613195030.png",alt:"image-20210526150850056"}})]),t._v(" "),s("p",[t._v("由式(4.4.17)可知,因为进位信号只与变量G、P,和C ,有关，而C.,是向最低位的进位信\n号,其值为0,所以各位的进位信号都只与两个加数有关,它们是可以并行产生的。用与门和或\n门即可实现式(4.4.17)所表示的超前进位产生电路,如图4.4.39所示。根据超前进位概念构\n成的4位加法器的结构示意图如图4.4.40所示。\n超前进位加法器大大提高了运算速度。但是,随着加法器位数的增加.超前进位逻辑电路越\n来越复杂。74HC283是4位超前进位加法器,如果进行更多位数的加法,则需要进行扩展。例如\n用74HC283实现8位二进制数相加，两片4位加法器的连接方法如图4.4.41所示。该电路的\n级联是串行进位方式,低位片(0)的进位输出连到高位片(1)的进位输人。当级联数目增加时，\n会影响运算速度,可采用并行进位的级联方式加以改进。")])])}),[],!1,null,null,null);a.default=r.exports}}]);