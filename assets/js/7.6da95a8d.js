(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{475:function(t,a,_){"use strict";_.r(a);var e=_(15),v=Object(e.a)({},(function(){var t=this,a=t.$createElement,_=t._self._c||a;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"x1-无符号二进制算术运算"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#x1-无符号二进制算术运算"}},[t._v("#")]),t._v(" x1.无符号二进制算术运算")]),t._v(" "),_("p",[t._v("基本和十进制的运算类似，唯一的区别就是在于进位错位规则不同。")]),t._v(" "),_("h2",{attrs:{id:"_4-除法运算"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-除法运算"}},[t._v("#")]),t._v(" 4.除法运算")]),t._v(" "),_("p",[t._v("除法运算只有两种：")]),t._v(" "),_("p",[t._v("0÷1=0")]),t._v(" "),_("p",[t._v("1÷1=1")]),t._v(" "),_("p",[t._v("因为0不能作除数。")]),t._v(" "),_("h1",{attrs:{id:"x2-带符号二进制算术运算"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#x2-带符号二进制算术运算"}},[t._v("#")]),t._v(" x2.带符号二进制算术运算")]),t._v(" "),_("h2",{attrs:{id:"_1-原码、反码、补码"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-原码、反码、补码"}},[t._v("#")]),t._v(" 1.原码、反码、补码")]),t._v(" "),_("ul",[_("li",[t._v("原码即用最高位表示符号位，用0表示正数，用1表示负数；")]),t._v(" "),_("li",[t._v("反码正数和原码相同，负数是除符号位外，将其他低位全部取反；")]),t._v(" "),_("li",[t._v("补码正数和原码相同，负数满足的定义为N~补~=R^n^-N，实际上相当于反码+1。")])]),t._v(" "),_("p",[t._v("计算机中的带符号数由补码存储。")]),t._v(" "),_("p",[t._v("范围：")]),t._v(" "),_("p",[t._v("由于-0和+0的原码和反码的表示不同，而补码的表示是相同的，所以，补码多了一个空闲标识，可以多表示一个负数。")]),t._v(" "),_("p",[t._v("所以4bits的情况下，它们分别表示的数值范围为：")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",{staticStyle:{"text-align":"center"}},[t._v("不同码")]),t._v(" "),_("th",{staticStyle:{"text-align":"center"}},[t._v("数值范围")])])]),t._v(" "),_("tbody",[_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("原码")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("$\\small-(2^{n-1}-1)$ ~ $\\small+(2^{n-1}-1)$")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("反码")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("$\\small-(2^{n-1}-1)$ ~ $\\small+(2^{n-1}-1)$")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("补码")]),t._v(" "),_("td",{staticStyle:{"text-align":"center"}},[t._v("$\\small-2^{n-1}$ ~ $\\small+(2^{n-1}-1)$")])])])]),t._v(" "),_("h2",{attrs:{id:"_2-补码的减法运算"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-补码的减法运算"}},[t._v("#")]),t._v(" 2.补码的减法运算")]),t._v(" "),_("p",[t._v("将减法转换为加法，即A-B=A+(-B)，对(-B)求补码，然后进行加法运算即可。")]),t._v(" "),_("h2",{attrs:{id:"_3-溢出"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-溢出"}},[t._v("#")]),t._v(" 3.溢出")]),t._v(" "),_("p",[t._v("溢出就是超出现有数值范围的运算，此时就会得到错误的结果，如：5+7=-4等。")]),t._v(" "),_("p",[t._v("判别方式如下：\n相同的符号位相加，得到了不同的符号位。")]),t._v(" "),_("p",[t._v("解决溢出的方法：\n进行位扩展。")])])}),[],!1,null,null,null);a.default=v.exports}}]);