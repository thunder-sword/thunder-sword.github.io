(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{452:function(a,_,r){"use strict";r.r(_);var t=r(15),v=Object(t.a)({},(function(){var a=this,_=a.$createElement,r=a._self._c||_;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"_0x1-最小二乘分析"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_0x1-最小二乘分析"}},[a._v("#")]),a._v(" 0x1.最小二乘分析")]),a._v(" "),r("p",[a._v("如果线性方程组：Ax=b")]),a._v(" "),r("p",[a._v("其中，A∈R^mxn^,b∈R^m^, m≤n, rank A=m。")]),a._v(" "),r("p",[a._v("中，由b不属于矩阵A的值域空间，则称该方程是矛盾的或过定的，在这种情况下，方程组无解。")]),a._v(" "),r("p",[a._v("求解该方程就变成了寻找一个向量x，使得 || Ax - b ||^2^最小。")]),a._v(" "),r("h2",{attrs:{id:"引理12-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#引理12-1"}},[a._v("#")]),a._v(" 引理12.1")]),a._v(" "),r("p",[a._v("A∈R^mxn^，m≤n,当且仅当rank A^T^A=n(即方正非奇异)时，rank A=n。")]),a._v(" "),r("h2",{attrs:{id:"定理12-1-x-唯一"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#定理12-1-x-唯一"}},[a._v("#")]),a._v(" 定理12.1 x*唯一")]),a._v(" "),r("p",[a._v("x*具有唯一性。")]),a._v(" "),r("h1",{attrs:{id:"_0x3-线性方程组的最小范数解"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_0x3-线性方程组的最小范数解"}},[a._v("#")]),a._v(" 0x3.线性方程组的最小范数解")]),a._v(" "),r("p",[a._v("某线性方程组为：Ax=b")]),a._v(" "),r("p",[a._v("其中，A∈R^mxn^,b∈R^m^, m≤n, rank A=m。")]),a._v(" "),r("p",[a._v("此时，方程组可能有无数个解，但是只存在一个最接近原点的解。")]),a._v(" "),r("p",[a._v("令x*表示这个解，所以对于任意满足Ax=b的x，都有|| x* || ≤ || x ||。")]),a._v(" "),r("h2",{attrs:{id:"定理12-2-x-a-t-aa-t-1-b"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#定理12-2-x-a-t-aa-t-1-b"}},[a._v("#")]),a._v(" 定理12.2 x*=A^T^(AA^T^)^-1^b")]),a._v(" "),r("p",[a._v("x*=A^T^(AA^T^)^-1^b")]),a._v(" "),r("p",[a._v("缺点是需要求(AA^T^)^-1^逆矩阵，当m较大时，计算耗时。")]),a._v(" "),r("p",[a._v("而这个缺点可以由下面的Kaczmarz算法改进。")]),a._v(" "),r("h1",{attrs:{id:"_0x4-kaczmarz算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_0x4-kaczmarz算法"}},[a._v("#")]),a._v(" 0x4.Kaczmarz算法")]),a._v(" "),r("p",[a._v("继续考虑12.3节中定义的方程组Ax=b, A∈R^mxn^, b∈R^m^, m≤n, rank A=m。本\n节介绍一种迭代求解算法,该算法由Kaczmarz于1937年首次提出[70], 能够在不直接计算AA^T^逆矩阵的情况下收敛到x*=A^T^(AA^T^)^-1^b。这一点使得该算法非常实用，尤其是在z矩阵A的行数非常多的情况下。\n令a~j~^T^ 表示矩阵A的第j行, b,表示向量b的第j个元素, μ为正实数,满足0<μ<2。\nKaczmarz算法的步骤为")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://gitee.com/ithundersword/BlogImages/raw/master/images/blog/PicGo/20210623093808.png",alt:"image-20210607190911239"}})]),a._v(" "),r("h1",{attrs:{id:"_0x5-一般意义下的线性方程组的求解"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_0x5-一般意义下的线性方程组的求解"}},[a._v("#")]),a._v(" 0x5.一般意义下的线性方程组的求解")]),a._v(" "),r("p",[a._v("一般意义下：")]),a._v(" "),r("p",[a._v("A∈R^mxn^,b∈R^m^, m≤n, rank A=r，且有r≤min{m,n}。")]),a._v(" "),r("p",[a._v("当rank A=n时，方程有唯一解x*=A^-1^b。")]),a._v(" "),r("h2",{attrs:{id:"定义-12-1-伪逆矩阵a"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#定义-12-1-伪逆矩阵a"}},[a._v("#")]),a._v(" 定义 12.1 伪逆矩阵A^+^")]),a._v(" "),r("p",[a._v("给定矩阵A∈R^mxn^，如果A^+^∈R^mxn^满足：")]),a._v(" "),r("p",[a._v("AA^+^A=A")]),a._v(" "),r("p",[a._v("且存在两个矩阵U∈R^mxn^，V∈R^mxn^，使得：")]),a._v(" "),r("p",[a._v("A^+^=UA^T^和A^+^=A^T^V")]),a._v(" "),r("p",[a._v("则称A^+^是矩阵A的伪逆。")]),a._v(" "),r("h2",{attrs:{id:"引理12-3-满秩分解"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#引理12-3-满秩分解"}},[a._v("#")]),a._v(" 引理12.3 满秩分解")]),a._v(" "),r("p",[a._v("矩阵A∈R^mxn^，rank A=r，且有r≤min{m,n}。存在矩阵B∈R^mxr^和矩阵C∈R^rxn^，使得A=BC。")]),a._v(" "),r("p",[a._v("其中rank A = rank B = rank C = r")]),a._v(" "),r("h2",{attrs:{id:"定理-12-4-如果伪逆a-存在，则唯一"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#定理-12-4-如果伪逆a-存在，则唯一"}},[a._v("#")]),a._v(" 定理 12.4 如果伪逆A^+^存在，则唯一")]),a._v(" "),r("p",[a._v("矩阵A∈R^mxn^，如果伪逆A^+^存在，则唯一")]),a._v(" "),r("h2",{attrs:{id:"定理12-5-a-c-b"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#定理12-5-a-c-b"}},[a._v("#")]),a._v(" 定理12.5 A^+^=C^+^B^+^")]),a._v(" "),r("p",[a._v("矩阵A∈R^mxn^的满秩分解为A=BC，rank A = rank B = rank C = r，B∈R^mxr^，C∈R^rxn^，那么有：")]),a._v(" "),r("p",[a._v("A^+^=C^+^B^+^")]),a._v(" "),r("h2",{attrs:{id:"定理12-6-x-a-b"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#定理12-6-x-a-b"}},[a._v("#")]),a._v(" 定理12.6 x*=A^+^b")]),a._v(" "),r("p",[a._v("x*=A^+^b时|| Ax - b ||^2^范数最小，且唯一")]),a._v(" "),r("h2",{attrs:{id:"运算规则"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#运算规则"}},[a._v("#")]),a._v(" 运算规则")]),a._v(" "),r("ol",[r("li",[a._v("(A^T^)^+^=(A^+^)^T^")]),a._v(" "),r("li",[a._v("(A^+^)=A")]),a._v(" "),r("li",[a._v("AA^+^A=A")]),a._v(" "),r("li",[a._v("A^+^AA^+^=A^+^")]),a._v(" "),r("li",[a._v("(AA^+^)^T^=AA^+^")]),a._v(" "),r("li",[a._v("(A^+^A)^T^=A^+^A")])])])}),[],!1,null,null,null);_.default=v.exports}}]);